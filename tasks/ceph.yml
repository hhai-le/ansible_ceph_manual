---
- name: remove ceph key if exist
  file:
    path: /etc/apt/trusted.gpg.d/ceph.gpg
    state: absent

- name: ceph apt key
  shell: wget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ceph.gpg

- name: ceph repo
  apt_repository:
    repo: "deb https://download.ceph.com/debian-reef/ {{ ansible_distribution_release }} main" 
    filename: /etc/apt/sources.list.d/ceph.list
    state: present

- name: install ceph package
  apt:
    name: ceph
    state: present
    update_cache: true

- block:
  - name: uuidgen
    shell: uuidgen
    register: uuid

  - debug:
      var: uuid.stdout

  - name: ceph.conf
    template:
      src: ceph.conf.j2
      dest: /etc/ceph/ceph.conf
      owner: ceph
      group: ceph
      
  - name: generate secret key for Cluster monitoring
    shell: ceph-authtool --create-keyring /etc/ceph/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'

  - name: generate secret key for Cluster admin
    shell: ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'

  - name: generate key for bootstrap
    shell: ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'

  - name: import generated key
    shell: ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring

  - name: import generated bootstrap key 
    shell: ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring

  - name: generate monitor map
    shell: monmaptool --create --add {{ ansible_hostname }} {{ hostvars[inventory_hostname].ansible_host }} --fsid {{ uuid.stdout }} /etc/ceph/monmap

  - name: create mon daemon folder
    file:
      path: "/var/lib/ceph/mon/ceph-{{ ansible_hostname }}"
      state: directory
      owner: ceph
      group: ceph
  
  - name: add key and monmap to mon daemon
    shell: ceph-mon --cluster ceph --mkfs -i {{ ansible_hostname }} --monmap /etc/ceph/monmap --keyring /etc/ceph/ceph.mon.keyring

  - name: chown /etc/ceph and /var/lib/ceph/ 
    file:
      path: "{{ item }}"
      state: directory
      owner: ceph
      group: ceph
      recurse: true
    with_items:
      - /etc/ceph/
      - /var/lib/ceph/
  
  - name: enable ceph-mon service
    systemd_service:
      name: ceph-mon@{{ ansible_hostname }}
      state: started
      enabled: true

  - name: enable Messenger v2 Protocol - ceph mon enable-msgr2
    shell: ceph mon enable-msgr2
  
  - name: enable Messenger v2 Protocol - ceph config set mon auth_allow_insecure_global_id_reclaim false
    shell: ceph config set mon auth_allow_insecure_global_id_reclaim false
  
  - name: enable Messenger v2 Protocol - ceph mgr module enable pg_autoscaler
    shell: ceph mgr module enable pg_autoscaler

  - name: create directory for Manager Daemon
    file:
      path: /var/lib/ceph/mgr/ceph-{{ ansible_hostname }}
      state: directory
      owner: ceph
      group: ceph
  
  - name: create auth key
    shell: ceph auth get-or-create mgr.{{ ansible_hostname }} mon 'allow profile mgr' osd 'allow *' mds 'allow *'
    register: mgr_key
  
  - name: mgr file keyring
    copy:
      content: "{{ mgr_key.stdout }}\n"
      dest: /etc/ceph/ceph.mgr.admin.keyring
      owner: ceph
      group: ceph
    
  - name: mgr file keyring
    copy:
      src: /etc/ceph/ceph.mgr.admin.keyring
      dest: /var/lib/ceph/mgr/ceph-{{ ansible_hostname }}/keyring
      remote_src: true
      owner: ceph
      group: ceph
  
  - name: enable ceph-mgr service
    systemd_service:
      name: ceph-mgr@{{ ansible_hostname }}
      state: started
      enabled: true

  - name: generate add ceph host script
    template:
      src: add_non_deployer.sh.j2
      dest: /tmp/add_non_deployer.sh
      mode: '0755'

  - name: run add ceph host script
    shell: /bin/bash /tmp/add_non_deployer.sh

  when: inventory_hostname in groups['deployer']

- block: 
  - name: generate deploy osd script
    template:
      src: deploy_osd.sh.j2
      dest: /tmp/deploy_osd.sh
      mode: '0755'

  - name: run deploy osd script
    shell: /bin/bash /tmp/deploy_osd.sh

  when: inventory_hostname in groups['ceph_osd']